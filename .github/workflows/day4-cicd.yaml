name: ashu app containerization pipeline 
# Trigger -- when this pipeline should start
on:
  push:
    branches:
      - "dev"
# jobs for performing operatiosn 
jobs:
  ashu-image-build:
    runs-on: ubuntu-latest
    # this server will be provision by github backen for this job
    steps:
      - name: run some basic commands on above server to do some verify 
        run: |
          uname -r 
          whoami
          cat /etc/os-release 
          docker version 
          docker-compose version 
          # sonar-scanner --version 
      - name: using pre-desing github workflow to get copy gitrepo code to runners machine 
        uses: actions/checkout@v4 

      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.1.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=ashu-common-project
            -Dsonar.exclusions=ecr/**,Dockerfile,compose.yaml,*.html
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


      - name: verify github code and use docker compose to build and create 
        run: |
          ls  -a 
          cd  python-app-secret
          docker-compose  up -d  
          sleep 2 
          docker-compose ps 
          sleep 1 
          docker-compose logs
      - name: Build an image from Dockerfile
        run: |
          cd python-app-secret
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ashupython:bmov${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ashupython:bmov${{ github.sha }}'
          format: 'table'
          exit-code: '0' # exit code non zero terminate pipeline
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: try to login from runner to docker hub account 
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: pushing image to docker hub 
        run: |
          echo "please wait while image is getting pushed"
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ashupython:bmov${{ github.sha }}
      - name: using upload artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: ashu-artifact
          path: |
            ./ashu-ecs
  ashu-cdk-build:
    runs-on: ubuntu-latest
    steps:          
      - name: installing node 20 
        uses: actions/setup-node@v2 
        with:
          node-version: '20'
      
      - name: downloading artifacts 
        uses: actions/download-artifact@v4
        with:
          name: ashu-artifact
          path: .  
      - name: install npm modules for ecs 
        run: |
          ls -a 
          node -v 
          cd ashu-ecs 
          npm install 
      - name: setup aws login details 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AwS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name:  cdk deploy ecs code try 1 
        run: |
          cd ashu-ecs
          npx cdk bootstrap 
          npx cdk deploy --no-rollback --require-approval never 